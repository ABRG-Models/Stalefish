{
    "desc_thickness" : "The thickness of a brain slice, assuming they'll all be the same.",

    "thickness" : 0.05,

    "desc_pixels_per_mm" : "How many pixels in the image corresponds to 1 mm? Assumed to apply equally to horz(y) and vert(z) directions.",

    "pixels_per_mm" : 233,

    "desc_bg_blur" : "bg_blur_screen_proportion is multiplied by the width of the image in pixels to get a sigma for the Gaussian which is used to blur the image to subtract the background.",

    "bg_blur_screen_proportion" : 0.1667,

    "desc_bg_blur_subtraction_offset" : "signal_img = 255 - (original_img + (bg_blur_subtraction_offset - blurred_bg)). Thus, possible range for bg_blur_subtraction_offset is 0 to 255.",

    "bg_blur_subtraction_offset" : 180,

    "desc_save_per_pixel_data" : "If true, then save out the signal values and coordinates of every individual pixel in each box and freehand loop. Can lead to very large data files.",
    "save_per_pixel_data" : true,

    "desc_save_auto_align_data" : "Default is true. If false, then don't write coordinates in the autoaligned frame of reference into the HDF5 data file.",
    "save_auto_align_data" : true,

    "desc_save_landmark_align_data" : "Default is true. If false, then don't write coordinates in the landmark aligned frame of reference into the HDF5 data file.",
    "save_landmark_align_data" : true,

    "desc_slices" : "The brain slices in the y-z plane, where y points to the anterior, z points dorsally (and so x is the lateral dimension).",

    "slices": [
        { "filename" : "data/testimg1.tif", "x" : 0.0   },
        { "filename" : "data/testimg2.tif", "x" : 0.05  },
        { "filename" : "data/testimg3.tif", "x" : 0.1   },
        { "filename" : "data/testimg4.tif", "x" : 0.15  }
    ]
}
